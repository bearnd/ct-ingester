"""empty message

Revision ID: e37dbf3a53cb
Revises: 
Create Date: 2018-03-28 12:13:49.171931

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e37dbf3a53cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aliases',
    sa.Column('alias_id', sa.BigInteger(), nullable=False),
    sa.Column('alias', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('alias_id')
    )
    op.create_index(op.f('ix_aliases_md5'), 'aliases', ['md5'], unique=True)
    op.create_table('analyses',
    sa.Column('analysis_id', sa.BigInteger(), nullable=False),
    sa.Column('groups_desc', sa.Unicode(), nullable=True),
    sa.Column('non_inferiority_type', sa.Enum('SUPERIORITY', 'NON_INFERIORITY', 'EQUIVALENCE', 'OTHER', name='noninferioritytype'), nullable=True),
    sa.Column('non_inferiority_desc', sa.Unicode(), nullable=True),
    sa.Column('p_value', sa.Unicode(), nullable=True),
    sa.Column('p_value_desc', sa.Unicode(), nullable=True),
    sa.Column('method', sa.Unicode(), nullable=True),
    sa.Column('method_desc', sa.Unicode(), nullable=True),
    sa.Column('param_type', sa.Unicode(), nullable=True),
    sa.Column('param_value', sa.Unicode(), nullable=True),
    sa.Column('dispersion_type', sa.Enum('SD', 'SEM', name='analysisdispersiontype'), nullable=True),
    sa.Column('dispersion_value', sa.Unicode(), nullable=True),
    sa.Column('ci_percent', sa.Float(), nullable=True),
    sa.Column('ci_n_sides', sa.Enum('ONE', 'TWO', name='numsidestype'), nullable=True),
    sa.Column('ci_lower_limit', sa.Unicode(), nullable=True),
    sa.Column('ci_upper_limit', sa.Unicode(), nullable=True),
    sa.Column('ci_upper_limit_na_comment', sa.Unicode(), nullable=True),
    sa.Column('estimate_desc', sa.Unicode(), nullable=True),
    sa.Column('other_analysis_desc', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('analysis_id')
    )
    op.create_index(op.f('ix_analyses_dispersion_type'), 'analyses', ['dispersion_type'], unique=False)
    op.create_index(op.f('ix_analyses_non_inferiority_type'), 'analyses', ['non_inferiority_type'], unique=False)
    op.create_table('arm_groups',
    sa.Column('arm_group_id', sa.BigInteger(), nullable=False),
    sa.Column('label', sa.Unicode(), nullable=False),
    sa.Column('type', sa.Unicode(), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('arm_group_id')
    )
    op.create_table('baselines',
    sa.Column('baseline_id', sa.BigInteger(), nullable=False),
    sa.Column('population', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('baseline_id')
    )
    op.create_table('conditions',
    sa.Column('condition_id', sa.BigInteger(), nullable=False),
    sa.Column('condition', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('condition_id')
    )
    op.create_index(op.f('ix_conditions_condition'), 'conditions', ['condition'], unique=True)
    op.create_index(op.f('ix_conditions_md5'), 'conditions', ['md5'], unique=True)
    op.create_table('drop_withdraw_reasons',
    sa.Column('drop_withdraw_reason_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('drop_withdraw_reason_id')
    )
    op.create_table('eligibilities',
    sa.Column('eligibility_id', sa.BigInteger(), nullable=False),
    sa.Column('study_pop', sa.UnicodeText(), nullable=True),
    sa.Column('sampling_method', sa.Enum('PROBABILITY', 'NON_PROBABILITY', name='samplingmethodtype'), nullable=True),
    sa.Column('criteria', sa.UnicodeText(), nullable=True),
    sa.Column('gender', sa.Enum('FEMALE', 'MALE', 'ALL', name='gendertype'), nullable=True),
    sa.Column('gender_based', sa.Boolean(), nullable=True),
    sa.Column('gender_description', sa.Unicode(), nullable=True),
    sa.Column('minimum_age', sa.Unicode(), nullable=True),
    sa.Column('maximum_age', sa.Unicode(), nullable=True),
    sa.Column('healthy_volunteers', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('eligibility_id')
    )
    op.create_table('enrollments',
    sa.Column('enrollment_id', sa.BigInteger(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('ACTUAL', 'ANTICIPATED', 'ESTIMATE', name='actualtype'), nullable=True),
    sa.PrimaryKeyConstraint('enrollment_id')
    )
    op.create_table('event_categories',
    sa.Column('event_category_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('event_category_id')
    )
    op.create_table('event_lists',
    sa.Column('event_list_id', sa.BigInteger(), nullable=False),
    sa.Column('frequency_threshold', sa.Unicode(), nullable=True),
    sa.Column('default_vocab', sa.Unicode(), nullable=True),
    sa.Column('default_assessment', sa.Enum('SYSTEMATIC', 'NON_SYSTEMATIC', name='eventassessmenttype'), nullable=True),
    sa.PrimaryKeyConstraint('event_list_id')
    )
    op.create_index(op.f('ix_event_lists_default_assessment'), 'event_lists', ['default_assessment'], unique=False)
    op.create_table('events',
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('sub_title', sa.Unicode(), nullable=True),
    sa.Column('assessment', sa.Enum('SYSTEMATIC', 'NON_SYSTEMATIC', name='eventassessmenttype'), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index(op.f('ix_events_assessment'), 'events', ['assessment'], unique=False)
    op.create_table('expanded_access_infos',
    sa.Column('expanded_access_info_id', sa.BigInteger(), nullable=False),
    sa.Column('individual', sa.Boolean(), nullable=True),
    sa.Column('intermediate', sa.Boolean(), nullable=True),
    sa.Column('treatment', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('expanded_access_info_id')
    )
    op.create_table('facilities',
    sa.Column('facility_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('city', sa.Unicode(), nullable=False),
    sa.Column('state', sa.Unicode(), nullable=True),
    sa.Column('zip_code', sa.Unicode(), nullable=True),
    sa.Column('country', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('facility_id')
    )
    op.create_index(op.f('ix_facilities_md5'), 'facilities', ['md5'], unique=True)
    op.create_table('groups',
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.Column('identifier', sa.Unicode(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('interventions',
    sa.Column('intervention_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('BEHAVIORAL', 'BIOLOGICAL', 'COMBINATION', 'DEVICE', 'DIAGNOSTIC', 'DIETARY', 'DRUG', 'GENETIC', 'PROCEDURE', 'RADIATION', 'OTHER', name='interventiontype'), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('intervention_id')
    )
    op.create_table('keywords',
    sa.Column('keyword_id', sa.BigInteger(), nullable=False),
    sa.Column('keyword', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('keyword_id')
    )
    op.create_index(op.f('ix_keywords_keyword'), 'keywords', ['keyword'], unique=True)
    op.create_index(op.f('ix_keywords_md5'), 'keywords', ['md5'], unique=True)
    op.create_table('measure_analyzeds',
    sa.Column('measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.Column('units', sa.Unicode(), nullable=True),
    sa.Column('scope', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('measure_analyzed_id')
    )
    op.create_table('measure_categories',
    sa.Column('measure_category_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('measure_category_id')
    )
    op.create_table('measure_classes',
    sa.Column('measure_class_id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('measure_class_id')
    )
    op.create_table('measures',
    sa.Column('measure_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('population', sa.Unicode(), nullable=True),
    sa.Column('units', sa.Unicode(), nullable=True),
    sa.Column('parameter', sa.Enum('GEOMETRIC', 'GLS_MEAN', 'LS_MEAN', 'LOG_MEAN', 'MEAN', 'MEDIAN', 'NUMBER', 'PARTICIPANTS', 'UNITS', name='measureparametertype'), nullable=False),
    sa.Column('dispersion', sa.Unicode(), nullable=True),
    sa.Column('units_analyzed', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('measure_id')
    )
    op.create_table('mesh_terms',
    sa.Column('mesh_term_id', sa.BigInteger(), nullable=False),
    sa.Column('term', sa.Unicode(), nullable=False),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('mesh_term_id')
    )
    op.create_index(op.f('ix_mesh_terms_md5'), 'mesh_terms', ['md5'], unique=True)
    op.create_table('milestones',
    sa.Column('milestone_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('milestone_id')
    )
    op.create_table('oversight_infos',
    sa.Column('oversight_info_id', sa.BigInteger(), nullable=False),
    sa.Column('has_dmc', sa.Boolean(), nullable=True),
    sa.Column('is_fda_regulated_drug', sa.Boolean(), nullable=True),
    sa.Column('is_fda_regulated_device', sa.Boolean(), nullable=True),
    sa.Column('is_unapproved_device', sa.Boolean(), nullable=True),
    sa.Column('is_ppsd', sa.Boolean(), nullable=True),
    sa.Column('is_us_export', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('oversight_info_id')
    )
    op.create_table('participant_flows',
    sa.Column('participant_flow_id', sa.BigInteger(), nullable=False),
    sa.Column('recruitment_details', sa.Unicode(), nullable=True),
    sa.Column('pre_assignment_details', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('participant_flow_id')
    )
    op.create_table('patient_datas',
    sa.Column('patient_data_id', sa.BigInteger(), nullable=False),
    sa.Column('sharing_ipd', sa.Unicode(), nullable=True),
    sa.Column('ipd_description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('patient_data_id')
    )
    op.create_table('periods',
    sa.Column('period_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('period_id')
    )
    op.create_table('persons',
    sa.Column('person_id', sa.BigInteger(), nullable=False),
    sa.Column('name_first', sa.Unicode(), nullable=True),
    sa.Column('name_middle', sa.Unicode(), nullable=True),
    sa.Column('name_last', sa.Unicode(), nullable=True),
    sa.Column('degrees', sa.Unicode(), nullable=True),
    sa.Column('md5', sa.Binary(), nullable=False),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_index(op.f('ix_persons_md5'), 'persons', ['md5'], unique=True)
    op.create_table('protocol_outcomes',
    sa.Column('protocol_outcome_id', sa.BigInteger(), nullable=False),
    sa.Column('measure', sa.Unicode(), nullable=False),
    sa.Column('time_frame', sa.Unicode(), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('protocol_outcome_id')
    )
    op.create_table('references',
    sa.Column('reference_id', sa.BigInteger(), nullable=False),
    sa.Column('citation', sa.Unicode(), nullable=True),
    sa.Column('pmid', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('reference_id')
    )
    op.create_table('responsible_parties',
    sa.Column('responsible_party_id', sa.BigInteger(), nullable=False),
    sa.Column('name_title', sa.Unicode(), nullable=True),
    sa.Column('organization', sa.Unicode(), nullable=True),
    sa.Column('type', sa.Enum('SPONSOR', 'PRINCIPAL', 'SPONSOR_INVESTIGATOR', name='responsiblepartytype'), nullable=False),
    sa.Column('investigator_affiliation', sa.Unicode(), nullable=True),
    sa.Column('investigator_full_name', sa.Unicode(), nullable=True),
    sa.Column('investigator_title', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('responsible_party_id')
    )
    op.create_table('sponsors',
    sa.Column('sponsor_id', sa.BigInteger(), nullable=False),
    sa.Column('agency', sa.Unicode(), nullable=False),
    sa.Column('class', sa.Enum('NIH', 'US', 'INDUSTRY', 'OTHER', name='agencyclasstype'), nullable=True),
    sa.Column('type', sa.Enum('LEAD', 'COLLABORATOR', name='sponsortype'), nullable=False),
    sa.PrimaryKeyConstraint('sponsor_id')
    )
    op.create_index(op.f('ix_sponsors_class'), 'sponsors', ['class'], unique=False)
    op.create_index(op.f('ix_sponsors_type'), 'sponsors', ['type'], unique=False)
    op.create_table('study_dates',
    sa.Column('study_dates_id', sa.BigInteger(), nullable=False),
    sa.Column('study_first_submitted', sa.Date(), nullable=True),
    sa.Column('study_first_submitted_qc', sa.Date(), nullable=True),
    sa.Column('study_first_posted', sa.Date(), nullable=True),
    sa.Column('results_first_submitted', sa.Date(), nullable=True),
    sa.Column('results_first_submitted_qc', sa.Date(), nullable=True),
    sa.Column('results_first_posted', sa.Date(), nullable=True),
    sa.Column('disposition_first_submitted', sa.Date(), nullable=True),
    sa.Column('disposition_first_submitted_qc', sa.Date(), nullable=True),
    sa.Column('disposition_first_posted', sa.Date(), nullable=True),
    sa.Column('last_update_submitted', sa.Date(), nullable=True),
    sa.Column('last_update_submitted_qc', sa.Date(), nullable=True),
    sa.Column('last_update_posted', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('study_dates_id')
    )
    op.create_table('study_design_infos',
    sa.Column('study_design_info_id', sa.BigInteger(), nullable=False),
    sa.Column('allocation', sa.Unicode(), nullable=True),
    sa.Column('intervention_model', sa.Unicode(), nullable=True),
    sa.Column('intervention_model_description', sa.Unicode(), nullable=True),
    sa.Column('primary_purpose', sa.Unicode(), nullable=True),
    sa.Column('observational_model', sa.Unicode(), nullable=True),
    sa.Column('time_perspective', sa.Unicode(), nullable=True),
    sa.Column('masking', sa.Unicode(), nullable=True),
    sa.Column('masking_description', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('study_design_info_id')
    )
    op.create_table('study_docs',
    sa.Column('study_doc_id', sa.BigInteger(), nullable=False),
    sa.Column('doc_id', sa.Unicode(), nullable=True),
    sa.Column('doc_type', sa.Unicode(), nullable=True),
    sa.Column('doc_url', sa.Unicode(), nullable=True),
    sa.Column('doc_comment', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('study_doc_id')
    )
    op.create_table('analysis_groups',
    sa.Column('analysis_group_id', sa.BigInteger(), nullable=False),
    sa.Column('analysis_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.analysis_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('analysis_group_id')
    )
    op.create_table('baseline_groups',
    sa.Column('baseline_group_id', sa.BigInteger(), nullable=False),
    sa.Column('baseline_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['baseline_id'], ['baselines.baseline_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('baseline_group_id')
    )
    op.create_table('baseline_measure_analyzeds',
    sa.Column('baseline_measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.Column('baseline_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['baseline_id'], ['baselines.baseline_id'], ),
    sa.ForeignKeyConstraint(['measure_analyzed_id'], ['measure_analyzeds.measure_analyzed_id'], ),
    sa.PrimaryKeyConstraint('baseline_measure_analyzed_id')
    )
    op.create_table('baseline_measures',
    sa.Column('baseline_measure_id', sa.BigInteger(), nullable=False),
    sa.Column('baseline_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['baseline_id'], ['baselines.baseline_id'], ),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.measure_id'], ),
    sa.PrimaryKeyConstraint('baseline_measure_id')
    )
    op.create_table('contacts',
    sa.Column('contact_id', sa.BigInteger(), nullable=False),
    sa.Column('person_id', sa.BigInteger(), nullable=False),
    sa.Column('phone', sa.Unicode(), nullable=True),
    sa.Column('phone_ext', sa.Unicode(), nullable=True),
    sa.Column('email', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], ),
    sa.PrimaryKeyConstraint('contact_id')
    )
    op.create_table('event_category_events',
    sa.Column('event_category_event_id', sa.BigInteger(), nullable=False),
    sa.Column('event_category_id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.event_category_id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.PrimaryKeyConstraint('event_category_event_id')
    )
    op.create_table('event_counts',
    sa.Column('event_count_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.Column('subjects_affected', sa.Integer(), nullable=True),
    sa.Column('subjects_at_risk', sa.Integer(), nullable=True),
    sa.Column('events', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('event_count_id')
    )
    op.create_table('event_list_categories',
    sa.Column('event_list_category_id', sa.BigInteger(), nullable=False),
    sa.Column('event_list_id', sa.BigInteger(), nullable=False),
    sa.Column('event_category_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_category_id'], ['event_categories.event_category_id'], ),
    sa.ForeignKeyConstraint(['event_list_id'], ['event_lists.event_list_id'], ),
    sa.PrimaryKeyConstraint('event_list_category_id')
    )
    op.create_table('intervention_aliases',
    sa.Column('intervention_alias_id', sa.BigInteger(), nullable=False),
    sa.Column('intervention_id', sa.BigInteger(), nullable=False),
    sa.Column('alias_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['alias_id'], ['aliases.alias_id'], ),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.intervention_id'], ),
    sa.PrimaryKeyConstraint('intervention_alias_id')
    )
    op.create_table('intervention_arm_groups',
    sa.Column('intervention_arm_group_id', sa.BigInteger(), nullable=False),
    sa.Column('intervention_id', sa.BigInteger(), nullable=False),
    sa.Column('arm_group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['arm_group_id'], ['arm_groups.arm_group_id'], ),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.intervention_id'], ),
    sa.PrimaryKeyConstraint('intervention_arm_group_id')
    )
    op.create_table('investigators',
    sa.Column('investigator_id', sa.BigInteger(), nullable=False),
    sa.Column('person_id', sa.BigInteger(), nullable=False),
    sa.Column('role', sa.Enum('PRINCIPAL', 'SUB', 'CHAIR', 'DIRECTOR', name='roletype'), nullable=False),
    sa.Column('affiliation', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.person_id'], ),
    sa.PrimaryKeyConstraint('investigator_id')
    )
    op.create_index(op.f('ix_investigators_role'), 'investigators', ['role'], unique=False)
    op.create_table('measure_class_analyzeds',
    sa.Column('measure_class_analyzed_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_class_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_analyzed_id'], ['measure_analyzeds.measure_analyzed_id'], ),
    sa.ForeignKeyConstraint(['measure_class_id'], ['measure_classes.measure_class_id'], ),
    sa.PrimaryKeyConstraint('measure_class_analyzed_id')
    )
    op.create_table('measure_class_categories',
    sa.Column('measure_class_category_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_class_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_category_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_category_id'], ['measure_categories.measure_category_id'], ),
    sa.ForeignKeyConstraint(['measure_class_id'], ['measure_classes.measure_class_id'], ),
    sa.PrimaryKeyConstraint('measure_class_category_id')
    )
    op.create_table('measure_counts',
    sa.Column('measure_count_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.Column('value', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('measure_count_id')
    )
    op.create_table('measure_measure_analyzeds',
    sa.Column('measure_measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_analyzed_id'], ['measure_analyzeds.measure_analyzed_id'], ),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.measure_id'], ),
    sa.PrimaryKeyConstraint('measure_measure_analyzed_id')
    )
    op.create_table('measure_measure_classes',
    sa.Column('measure_measure_class_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_class_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_class_id'], ['measure_classes.measure_class_id'], ),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.measure_id'], ),
    sa.PrimaryKeyConstraint('measure_measure_class_id')
    )
    op.create_table('measurements',
    sa.Column('measurement_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.Column('value', sa.Unicode(), nullable=True),
    sa.Column('spread', sa.Unicode(), nullable=True),
    sa.Column('lower_limit', sa.Unicode(), nullable=True),
    sa.Column('upper_limit', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('measurement_id')
    )
    op.create_table('participant_flow_groups',
    sa.Column('participant_flow_group_id', sa.BigInteger(), nullable=False),
    sa.Column('participant_flow_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['participant_flow_id'], ['participant_flows.participant_flow_id'], ),
    sa.PrimaryKeyConstraint('participant_flow_group_id')
    )
    op.create_table('participant_flow_periods',
    sa.Column('participant_flow_period_id', sa.BigInteger(), nullable=False),
    sa.Column('participant_flow_id', sa.BigInteger(), nullable=False),
    sa.Column('period_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['participant_flow_id'], ['participant_flows.participant_flow_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.period_id'], ),
    sa.PrimaryKeyConstraint('participant_flow_period_id')
    )
    op.create_table('participants',
    sa.Column('participant_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('participant_id')
    )
    op.create_table('period_drop_withdraw_reasons',
    sa.Column('period_drop_withdraw_reason_id', sa.BigInteger(), nullable=False),
    sa.Column('period_id', sa.BigInteger(), nullable=False),
    sa.Column('drop_withdraw_reason_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['drop_withdraw_reason_id'], ['drop_withdraw_reasons.drop_withdraw_reason_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.period_id'], ),
    sa.PrimaryKeyConstraint('period_drop_withdraw_reason_id')
    )
    op.create_table('period_milestones',
    sa.Column('period_milestone_id', sa.BigInteger(), nullable=False),
    sa.Column('period_id', sa.BigInteger(), nullable=False),
    sa.Column('milestone_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.milestone_id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.period_id'], ),
    sa.PrimaryKeyConstraint('period_milestone_id')
    )
    op.create_table('reported_events',
    sa.Column('reported_event_id', sa.BigInteger(), nullable=False),
    sa.Column('time_frame', sa.Unicode(), nullable=True),
    sa.Column('desc', sa.Unicode(), nullable=True),
    sa.Column('serious_event_list_id', sa.BigInteger(), nullable=False),
    sa.Column('other_event_list_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['other_event_list_id'], ['event_lists.event_list_id'], ),
    sa.ForeignKeyConstraint(['serious_event_list_id'], ['event_lists.event_list_id'], ),
    sa.PrimaryKeyConstraint('reported_event_id')
    )
    op.create_table('result_outcomes',
    sa.Column('result_outcome_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('PRIMARY', 'SECONDARY', 'POST_HOC', 'OTHER', name='outcometype'), nullable=False),
    sa.Column('title', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('time_frame', sa.Unicode(), nullable=True),
    sa.Column('safety_issue', sa.Boolean(), nullable=True),
    sa.Column('population', sa.Unicode(), nullable=True),
    sa.Column('measure_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_id'], ['measures.measure_id'], ),
    sa.PrimaryKeyConstraint('result_outcome_id')
    )
    op.create_table('event_event_counts',
    sa.Column('event_event_count_id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('event_count_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['event_count_id'], ['event_counts.event_count_id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.PrimaryKeyConstraint('event_event_count_id')
    )
    op.create_table('locations',
    sa.Column('location_id', sa.BigInteger(), nullable=False),
    sa.Column('facility_id', sa.BigInteger(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE_NOT', 'COMPLETED', 'INVITATION', 'NOT_YET', 'RECRUITING', 'SUSPENDED', 'TERMINATED', 'WITHDRAWN', name='recruitmentstatustype'), nullable=True),
    sa.Column('contact_primary_id', sa.BigInteger(), nullable=True),
    sa.Column('contact_backup_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['contact_backup_id'], ['contacts.contact_id'], ),
    sa.ForeignKeyConstraint(['contact_primary_id'], ['contacts.contact_id'], ),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.facility_id'], ),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_index(op.f('ix_locations_status'), 'locations', ['status'], unique=False)
    op.create_table('measure_analyzed_counts',
    sa.Column('measure_analyzed_count_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_analyzed_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_count_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_analyzed_id'], ['measure_analyzeds.measure_analyzed_id'], ),
    sa.ForeignKeyConstraint(['measure_count_id'], ['measure_counts.measure_count_id'], ),
    sa.PrimaryKeyConstraint('measure_analyzed_count_id')
    )
    op.create_table('measure_category_measurements',
    sa.Column('measure_category_measurement_id', sa.BigInteger(), nullable=False),
    sa.Column('measure_category_id', sa.BigInteger(), nullable=False),
    sa.Column('measurement_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['measure_category_id'], ['measure_categories.measure_category_id'], ),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.measurement_id'], ),
    sa.PrimaryKeyConstraint('measure_category_measurement_id')
    )
    op.create_table('milestone_participants',
    sa.Column('milestone_participant_id', sa.BigInteger(), nullable=False),
    sa.Column('milestone_id', sa.BigInteger(), nullable=False),
    sa.Column('participant_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.milestone_id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.participant_id'], ),
    sa.PrimaryKeyConstraint('milestone_participant_id')
    )
    op.create_table('reported_event_groups',
    sa.Column('reported_event_group_id', sa.BigInteger(), nullable=False),
    sa.Column('reported_event_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['reported_event_id'], ['reported_events.reported_event_id'], ),
    sa.PrimaryKeyConstraint('reported_event_group_id')
    )
    op.create_table('result_outcome_groups',
    sa.Column('result_outcome_group_id', sa.BigInteger(), nullable=False),
    sa.Column('result_outcome_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['result_outcome_id'], ['result_outcomes.result_outcome_id'], ),
    sa.PrimaryKeyConstraint('result_outcome_group_id')
    )
    op.create_table('studies',
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('org_study_id', sa.Unicode(), nullable=True),
    sa.Column('secondary_id', sa.Unicode(), nullable=True),
    sa.Column('nct_id', sa.Unicode(), nullable=True),
    sa.Column('brief_title', sa.Unicode(), nullable=False),
    sa.Column('acronym', sa.Unicode(), nullable=True),
    sa.Column('official_title', sa.Unicode(), nullable=True),
    sa.Column('source', sa.Unicode(), nullable=True),
    sa.Column('oversight_info_id', sa.BigInteger(), nullable=False),
    sa.Column('brief_summary', sa.UnicodeText(), nullable=True),
    sa.Column('detailed_description', sa.UnicodeText(), nullable=True),
    sa.Column('overall_status', sa.Enum('ACTIVE_NOT', 'COMPLETED', 'INVITATION', 'NOT_YET', 'RECRUITING', 'SUSPENDED', 'TERMINATED', 'WITHDRAWN', 'AVAILABLE', 'UNAVAILABLE', 'TEMP_UNAVAILABLE', 'APPROVED', 'WITHHELD', 'UNKNOWN', name='overallstatustype'), nullable=False),
    sa.Column('last_known_status', sa.Enum('ACTIVE_NOT', 'COMPLETED', 'INVITATION', 'NOT_YET', 'RECRUITING', 'SUSPENDED', 'TERMINATED', 'WITHDRAWN', 'AVAILABLE', 'UNAVAILABLE', 'TEMP_UNAVAILABLE', 'APPROVED', 'WITHHELD', 'UNKNOWN', name='overallstatustype'), nullable=False),
    sa.Column('why_stopped', sa.Unicode(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=True),
    sa.Column('primary_completion_date', sa.Date(), nullable=True),
    sa.Column('verification_date', sa.Date(), nullable=True),
    sa.Column('phase', sa.Enum('NA', 'PHASE_1_EARLY', 'PHASE_1', 'PHASE_1_2', 'PHASE_2', 'PHASE_2_3', 'PHASE_3', 'PHASE_4', name='phasetype'), nullable=False),
    sa.Column('study_type', sa.Enum('EXPANDED', 'INTERVENTIONAL', 'NA', 'OBSERVATIONAL', 'OBSERVATIONAL_PR', name='studytype'), nullable=False),
    sa.Column('expanded_access_info_id', sa.BigInteger(), nullable=True),
    sa.Column('study_design_info_id', sa.BigInteger(), nullable=True),
    sa.Column('target_duration', sa.Unicode(), nullable=True),
    sa.Column('enrollment_id', sa.BigInteger(), nullable=False),
    sa.Column('biospec_retention', sa.Enum('NONE', 'SAMPLES_W_DNA', 'SAMPLES_WO_DNA', name='biospecretentiontype'), nullable=False),
    sa.Column('biospec_description', sa.Unicode(), nullable=True),
    sa.Column('eligibility_id', sa.BigInteger(), nullable=False),
    sa.Column('contact_primary_id', sa.BigInteger(), nullable=False),
    sa.Column('contact_backup_id', sa.BigInteger(), nullable=False),
    sa.Column('study_dates_id', sa.BigInteger(), nullable=False),
    sa.Column('responsible_party_id', sa.BigInteger(), nullable=False),
    sa.Column('patient_data_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['contact_backup_id'], ['contacts.contact_id'], ),
    sa.ForeignKeyConstraint(['contact_primary_id'], ['contacts.contact_id'], ),
    sa.ForeignKeyConstraint(['eligibility_id'], ['eligibilities.eligibility_id'], ),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollments.enrollment_id'], ),
    sa.ForeignKeyConstraint(['expanded_access_info_id'], ['expanded_access_infos.expanded_access_info_id'], ),
    sa.ForeignKeyConstraint(['oversight_info_id'], ['oversight_infos.oversight_info_id'], ),
    sa.ForeignKeyConstraint(['patient_data_id'], ['patient_datas.patient_data_id'], ),
    sa.ForeignKeyConstraint(['responsible_party_id'], ['responsible_parties.responsible_party_id'], ),
    sa.ForeignKeyConstraint(['study_dates_id'], ['study_dates.study_dates_id'], ),
    sa.ForeignKeyConstraint(['study_design_info_id'], ['study_design_infos.study_design_info_id'], ),
    sa.PrimaryKeyConstraint('study_id')
    )
    op.create_index(op.f('ix_studies_biospec_retention'), 'studies', ['biospec_retention'], unique=False)
    op.create_index(op.f('ix_studies_last_known_status'), 'studies', ['last_known_status'], unique=False)
    op.create_index(op.f('ix_studies_overall_status'), 'studies', ['overall_status'], unique=False)
    op.create_index(op.f('ix_studies_phase'), 'studies', ['phase'], unique=False)
    op.create_index(op.f('ix_studies_study_type'), 'studies', ['study_type'], unique=False)
    op.create_table('location_investigators',
    sa.Column('location_investigator_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=False),
    sa.Column('investigator_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['investigator_id'], ['investigators.investigator_id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.location_id'], ),
    sa.PrimaryKeyConstraint('location_investigator_id')
    )
    op.create_table('study_aliases',
    sa.Column('study_alias_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('alias_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['alias_id'], ['aliases.alias_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_alias_id')
    )
    op.create_table('study_arm_groups',
    sa.Column('study_arm_group_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('arm_group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['arm_group_id'], ['arm_groups.arm_group_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_arm_group_id')
    )
    op.create_table('study_conditions',
    sa.Column('study_condition_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('condition_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.condition_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_condition_id')
    )
    op.create_table('study_interventions',
    sa.Column('study_intervention_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('intervention_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.intervention_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_intervention_id')
    )
    op.create_table('study_investigators',
    sa.Column('study_investigator_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('investigator_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['investigator_id'], ['investigators.investigator_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_investigator_id')
    )
    op.create_table('study_keywords',
    sa.Column('study_keyword_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('keyword_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.keyword_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_keyword_id')
    )
    op.create_table('study_locations',
    sa.Column('study_location_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.location_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_location_id')
    )
    op.create_table('study_mesh_terms',
    sa.Column('study_mesh_term_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('mesh_term_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('CONDITION', 'INTERVENTION', name='meshtermtype'), nullable=False),
    sa.ForeignKeyConstraint(['mesh_term_id'], ['mesh_terms.mesh_term_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_mesh_term_id')
    )
    op.create_index(op.f('ix_study_mesh_terms_type'), 'study_mesh_terms', ['type'], unique=False)
    op.create_table('study_outcomes',
    sa.Column('study_primary_outcome_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('protocol_outcome_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('PRIMARY', 'SECONDARY', 'POST_HOC', 'OTHER', name='outcometype'), nullable=False),
    sa.ForeignKeyConstraint(['protocol_outcome_id'], ['protocol_outcomes.protocol_outcome_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_primary_outcome_id')
    )
    op.create_index(op.f('ix_study_outcomes_type'), 'study_outcomes', ['type'], unique=False)
    op.create_table('study_references',
    sa.Column('study_reference_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('reference_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('STANDARD', 'RESULTS', name='referencetype'), nullable=False),
    sa.ForeignKeyConstraint(['reference_id'], ['references.reference_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_reference_id')
    )
    op.create_index(op.f('ix_study_references_type'), 'study_references', ['type'], unique=False)
    op.create_table('study_sponsors',
    sa.Column('study_sponsor_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('sponsor_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['sponsor_id'], ['sponsors.sponsor_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_sponsor_id')
    )
    op.create_table('study_study_docs',
    sa.Column('study_study_doc_id', sa.BigInteger(), nullable=False),
    sa.Column('study_id', sa.BigInteger(), nullable=False),
    sa.Column('study_doc_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['study_doc_id'], ['study_docs.study_doc_id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['studies.study_id'], ),
    sa.PrimaryKeyConstraint('study_study_doc_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('study_study_docs')
    op.drop_table('study_sponsors')
    op.drop_index(op.f('ix_study_references_type'), table_name='study_references')
    op.drop_table('study_references')
    op.drop_index(op.f('ix_study_outcomes_type'), table_name='study_outcomes')
    op.drop_table('study_outcomes')
    op.drop_index(op.f('ix_study_mesh_terms_type'), table_name='study_mesh_terms')
    op.drop_table('study_mesh_terms')
    op.drop_table('study_locations')
    op.drop_table('study_keywords')
    op.drop_table('study_investigators')
    op.drop_table('study_interventions')
    op.drop_table('study_conditions')
    op.drop_table('study_arm_groups')
    op.drop_table('study_aliases')
    op.drop_table('location_investigators')
    op.drop_index(op.f('ix_studies_study_type'), table_name='studies')
    op.drop_index(op.f('ix_studies_phase'), table_name='studies')
    op.drop_index(op.f('ix_studies_overall_status'), table_name='studies')
    op.drop_index(op.f('ix_studies_last_known_status'), table_name='studies')
    op.drop_index(op.f('ix_studies_biospec_retention'), table_name='studies')
    op.drop_table('studies')
    op.drop_table('result_outcome_groups')
    op.drop_table('reported_event_groups')
    op.drop_table('milestone_participants')
    op.drop_table('measure_category_measurements')
    op.drop_table('measure_analyzed_counts')
    op.drop_index(op.f('ix_locations_status'), table_name='locations')
    op.drop_table('locations')
    op.drop_table('event_event_counts')
    op.drop_table('result_outcomes')
    op.drop_table('reported_events')
    op.drop_table('period_milestones')
    op.drop_table('period_drop_withdraw_reasons')
    op.drop_table('participants')
    op.drop_table('participant_flow_periods')
    op.drop_table('participant_flow_groups')
    op.drop_table('measurements')
    op.drop_table('measure_measure_classes')
    op.drop_table('measure_measure_analyzeds')
    op.drop_table('measure_counts')
    op.drop_table('measure_class_categories')
    op.drop_table('measure_class_analyzeds')
    op.drop_index(op.f('ix_investigators_role'), table_name='investigators')
    op.drop_table('investigators')
    op.drop_table('intervention_arm_groups')
    op.drop_table('intervention_aliases')
    op.drop_table('event_list_categories')
    op.drop_table('event_counts')
    op.drop_table('event_category_events')
    op.drop_table('contacts')
    op.drop_table('baseline_measures')
    op.drop_table('baseline_measure_analyzeds')
    op.drop_table('baseline_groups')
    op.drop_table('analysis_groups')
    op.drop_table('study_docs')
    op.drop_table('study_design_infos')
    op.drop_table('study_dates')
    op.drop_index(op.f('ix_sponsors_type'), table_name='sponsors')
    op.drop_index(op.f('ix_sponsors_class'), table_name='sponsors')
    op.drop_table('sponsors')
    op.drop_table('responsible_parties')
    op.drop_table('references')
    op.drop_table('protocol_outcomes')
    op.drop_index(op.f('ix_persons_md5'), table_name='persons')
    op.drop_table('persons')
    op.drop_table('periods')
    op.drop_table('patient_datas')
    op.drop_table('participant_flows')
    op.drop_table('oversight_infos')
    op.drop_table('milestones')
    op.drop_index(op.f('ix_mesh_terms_md5'), table_name='mesh_terms')
    op.drop_table('mesh_terms')
    op.drop_table('measures')
    op.drop_table('measure_classes')
    op.drop_table('measure_categories')
    op.drop_table('measure_analyzeds')
    op.drop_index(op.f('ix_keywords_md5'), table_name='keywords')
    op.drop_index(op.f('ix_keywords_keyword'), table_name='keywords')
    op.drop_table('keywords')
    op.drop_table('interventions')
    op.drop_table('groups')
    op.drop_index(op.f('ix_facilities_md5'), table_name='facilities')
    op.drop_table('facilities')
    op.drop_table('expanded_access_infos')
    op.drop_index(op.f('ix_events_assessment'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_event_lists_default_assessment'), table_name='event_lists')
    op.drop_table('event_lists')
    op.drop_table('event_categories')
    op.drop_table('enrollments')
    op.drop_table('eligibilities')
    op.drop_table('drop_withdraw_reasons')
    op.drop_index(op.f('ix_conditions_md5'), table_name='conditions')
    op.drop_index(op.f('ix_conditions_condition'), table_name='conditions')
    op.drop_table('conditions')
    op.drop_table('baselines')
    op.drop_table('arm_groups')
    op.drop_index(op.f('ix_analyses_non_inferiority_type'), table_name='analyses')
    op.drop_index(op.f('ix_analyses_dispersion_type'), table_name='analyses')
    op.drop_table('analyses')
    op.drop_index(op.f('ix_aliases_md5'), table_name='aliases')
    op.drop_table('aliases')
    # ### end Alembic commands ###
